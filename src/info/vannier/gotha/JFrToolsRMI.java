/*
 * JFrToolsRMI.java
 */

package info.vannier.gotha;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.registry.Registry;
import java.util.ArrayList;


/**
 *
 * @author Luc
 */
public class JFrToolsRMI extends javax.swing.JFrame {
    private static final long REFRESH_DELAY = 500;
    Registry reg = null;
    /** Creates new form JFrToolsTRMI */
    public JFrToolsRMI() {
        initComponents();
        customInitComponents();
        setupRefreshTimer();
    }

    private void setupRefreshTimer() {
        ActionListener taskPerformer = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                if(ckbRTUpdate.isSelected())updateComponents();
            }
        };

        new javax.swing.Timer((int) REFRESH_DELAY, taskPerformer).start();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpRegistryContents = new javax.swing.JScrollPane();
        lstRegistryContents = new javax.swing.JList();
        btnUnbind = new javax.swing.JButton();
        scpClients = new javax.swing.JScrollPane();
        lstClients = new javax.swing.JList();
        lblClients = new javax.swing.JLabel();
        lblClients1 = new javax.swing.JLabel();
        btnForgetNonActiveClients = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        ckbRTUpdate = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RMI Manager");
        setResizable(false);
        getContentPane().setLayout(null);

        lstRegistryContents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scpRegistryContents.setViewportView(lstRegistryContents);

        getContentPane().add(scpRegistryContents);
        scpRegistryContents.setBounds(20, 40, 200, 170);

        btnUnbind.setText("Unbind selected tournament");
        btnUnbind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnbindActionPerformed(evt);
            }
        });
        getContentPane().add(btnUnbind);
        btnUnbind.setBounds(20, 230, 200, 23);

        lstClients.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        scpClients.setViewportView(lstClients);

        getContentPane().add(scpClients);
        scpClients.setBounds(240, 40, 360, 170);

        lblClients.setText("List of clients");
        getContentPane().add(lblClients);
        lblClients.setBounds(240, 20, 230, 14);

        lblClients1.setText("List of tournaments");
        getContentPane().add(lblClients1);
        lblClients1.setBounds(20, 20, 140, 14);

        btnForgetNonActiveClients.setText("Forget non active clients");
        btnForgetNonActiveClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgetNonActiveClientsActionPerformed(evt);
            }
        });
        getContentPane().add(btnForgetNonActiveClients);
        btnForgetNonActiveClients.setBounds(240, 230, 360, 23);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose);
        btnClose.setBounds(20, 330, 580, 23);

        ckbRTUpdate.setSelected(true);
        ckbRTUpdate.setText("Real time update");
        getContentPane().add(ckbRTUpdate);
        ckbRTUpdate.setBounds(20, 290, 200, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customInitComponents(){
        int w = JFrGotha.MEDIUM_FRAME_WIDTH;
        int h = JFrGotha.MEDIUM_FRAME_HEIGHT;
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((dim.width - w)/2, (dim.height -h)/2, w, h);
        setIconImage(Gotha.getIconImage());

        updateComponents();
    }

    private void updateComponents(){
        this.lstRegistryContents.removeAll();
        String[] lstTN = GothaRMIServer.tournamentNamesList();
        if (lstTN != null)
            lstRegistryContents.setListData(lstTN);

        ArrayList<GothaRMIClient> alCN = GothaRMIServer.clientsList();
        String[] lstCN = new String[alCN.size()];
        for (int i = 0; i < lstCN.length; i++){
            GothaRMIClient cl = alCN.get(i);
            long lastKnownActivity = (System.currentTimeMillis() - cl.getLastSignOfLife()) /1000;

            lstCN[i] = cl.getClientUniqueId()
                    + " " + cl.getTournamentName()
                    + " last known activity = " + lastKnownActivity  + " sec ago";
        }
        this.lstClients.setListData(lstCN);
    }

    private void btnUnbindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnbindActionPerformed
        String nameToUnbind = (String)lstRegistryContents.getSelectedValue();
        GothaRMIServer.removeTournament(nameToUnbind);
        updateComponents();
}//GEN-LAST:event_btnUnbindActionPerformed

    private void btnForgetNonActiveClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgetNonActiveClientsActionPerformed
        long MAX_IDLE_TIME = 30000;
        ArrayList<GothaRMIClient> alC = GothaRMIServer.clientsList();
        for (GothaRMIClient cl : alC){
            long lastKnownActivity = System.currentTimeMillis() - cl.getLastSignOfLife();
            if (lastKnownActivity > MAX_IDLE_TIME) GothaRMIServer.removeClient(cl.getClientUniqueId());
            this.updateComponents();
        }
    }//GEN-LAST:event_btnForgetNonActiveClientsActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnForgetNonActiveClients;
    private javax.swing.JButton btnUnbind;
    private javax.swing.JCheckBox ckbRTUpdate;
    private javax.swing.JLabel lblClients;
    private javax.swing.JLabel lblClients1;
    private javax.swing.JList lstClients;
    private javax.swing.JList lstRegistryContents;
    private javax.swing.JScrollPane scpClients;
    private javax.swing.JScrollPane scpRegistryContents;
    // End of variables declaration//GEN-END:variables

}
